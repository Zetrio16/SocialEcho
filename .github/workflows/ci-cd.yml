name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # 3. Cache Docker layers
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      # 4. Build Frontend Docker image
      - name: Build Frontend Docker image
        run: |
          docker build -f client/Dockerfile -t my-frontend:latest ./client

      # 5. Build Backend Docker image
      - name: Build Backend Docker image
        run: |
          docker build -f server/Dockerfile -t my-backend:latest ./server

      # 6. Push Docker images
      - name: Push Docker images
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker tag my-frontend:latest <your-docker-registry>/my-frontend:latest
          docker tag my-backend:latest <your-docker-registry>/my-backend:latest
          docker push <your-docker-registry>/my-frontend:latest
          docker push <your-docker-registry>/my-backend:latest

      # 7. Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose version

      # 8. Deploy with Docker Compose
      - name: Deploy with Docker Compose
        run: |
          docker-compose -f docker-compose.yml up -d
